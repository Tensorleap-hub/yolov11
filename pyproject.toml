[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "ultralytics"
version = "1.0.0"
description = "Ultralytics YOLO ðŸš€ for SOTA object detection, multi-object tracking, instance segmentation, pose estimation and image classification."
authors = ["Glenn Jocher <glenn.jocher@ultralytics.com>", "Jing Qiu <jing.qiu@ultralytics.com>"]
license = "AGPL-3.0"
readme = "README.md"
repository = "https://github.com/ultralytics/ultralytics"
homepage = "https://ultralytics.com"
keywords = ["YOLO", "Object Detection", "Deep Learning", "Computer Vision"]

[tool.poetry.dependencies]
python = ">=3.9,<3.11"
numpy = ">=1.23.0,<2.1.1"
matplotlib = ">=3.3.0"
opencv-python = ">=4.6.0"
pillow = ">=7.1.2"
pyyaml = ">=5.3.1"
requests = ">=2.23.0"
scipy = ">=1.4.1"
torch = ">=1.8.0"
torchvision = ">=0.9.0"
tqdm = ">=4.64.0"
psutil = "*"
py-cpuinfo = "*"
pandas = ">=1.1.4"
seaborn = ">=0.11.0"
ultralytics-thop = ">=2.0.0"
code-loader = "^1.0.75"
code-loader-helpers = "^1.0.20"
[tool.poetry.group.dev.dependencies]
ipython = "*"
pytest = "*"
pytest-cov = "*"
coverage = {extras = ["toml"], version = "*"}
mkdocs = ">=1.6.0"
mkdocs-material = ">=9.5.9"
mkdocstrings = {extras = ["python"], version = "*"}
mkdocs-redirects = "*"
mkdocs-ultralytics-plugin = ">=0.1.17"
mkdocs-macros-plugin = ">=1.0.5"

[tool.poetry.group.export.dependencies]
onnx = ">=1.12.0"
coremltools = {version = ">=7.0", markers = "platform_system != 'Windows' and python_version <= '3.11'"}
scikit-learn = {version = ">=1.3.2", markers = "platform_system != 'Windows' and python_version <= '3.11'"}
openvino = ">=2024.0.0,<2026.0.0"
tensorflowjs = ">=3.9.0"
keras = "*"
flatbuffers = {version = ">=23.5.26,<100", markers = "platform_machine == 'aarch64'"}
h5py = {version = "!=3.11.0", markers = "platform_machine == 'aarch64'"}

[tool.poetry.group.logging.dependencies]
comet = "*"
tensorboard = ">=2.12.0"
dvclive = ">=2.12.0"

[tool.poetry.group.solutions.dependencies]
shapely = ">=2.0.0"
streamlit = "*"

[tool.poetry.group.extra.dependencies]
hub-sdk = ">=0.0.12"
albumentations = ">=1.4.6"
pycocotools = ">=2.0.7"

[tool.poetry.scripts]
yolo = "ultralytics.cfg:entrypoint"
ultralytics = "ultralytics.cfg:entrypoint"

# Tools settings -------------------------------------------------------------------------------------------------------
[tool.setuptools]
packages = { find = { where = ["."], include = ["ultralytics", "ultralytics.*"] } }
package-data = { "ultralytics" = ["**/*.yaml", "../tests/*.py"], "ultralytics.assets" = ["*.jpg"] }

[tool.setuptools.dynamic]
version = { attr = "ultralytics.__version__" }

[tool.pytest.ini_options]
addopts = "--doctest-modules --durations=30 --color=yes"
markers = [
    "slow: skip slow tests unless --slow is set",
]
norecursedirs = [".git", "dist", "build"]

[tool.coverage.run]
source = ["ultralytics/"]
data_file = "tests/.coverage"
omit = ["ultralytics/utils/callbacks/*"]

[tool.isort]
line_length = 120
multi_line_output = 0

[tool.yapf]
based_on_style = "pep8"
spaces_before_comment = 2
column_limit = 120
coalesce_brackets = true
spaces_around_power_operator = true
space_between_ending_comma_and_closing_bracket = true
split_before_closing_bracket = false
split_before_first_argument = false

[tool.ruff]
line-length = 120

[tool.ruff.format]
docstring-code-format = true

[tool.docformatter]
wrap-summaries = 120
wrap-descriptions = 120
pre-summary-newline = true
close-quotes-on-newline = true
in-place = true

[tool.codespell]
ignore-words-list = "crate,nd,ned,strack,dota,ane,segway,fo,gool,winn,commend,bloc,nam,afterall"
skip = '*.pt,*.pth,*.torchscript,*.onnx,*.tflite,*.pb,*.bin,*.param,*.mlmodel,*.engine,*.npy,*.data*,*.csv,*pnnx*,*venv*,*translat*,__pycache__*,*.ico,*.jpg,*.png,*.mp4,*.mov,/runs,/.git,./docs/??/*.md,./docs/mkdocs_??.yml'
